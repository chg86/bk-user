# -*- coding: utf-8 -*-
"""
TencentBlueKing is pleased to support the open source community by making 蓝鲸智云-用户管理(Bk-User) available.
Copyright (C) 2017-2021 THL A29 Limited, a Tencent company. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/MIT
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 3.2.5 on 2021-08-03 02:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("categories", "0009_auto_20210413_1702"),
    ]

    operations = [
        migrations.CreateModel(
            name="SyncProgress",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                ("task_id", models.UUIDField(db_index=True, verbose_name="任务id")),
                (
                    "step",
                    models.CharField(
                        choices=[
                            ("users", "用户数据更新"),
                            ("departments", "组织数据更新"),
                            ("users_relationship", "用户间关系数据更新"),
                            ("dept_user_relationship", "用户和组织关系数据更新"),
                        ],
                        max_length=32,
                        verbose_name="同步步骤",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("successful", "成功"), ("failed", "失败"), ("running", "同步中")],
                        default="running",
                        max_length=16,
                        verbose_name="状态",
                    ),
                ),
                ("successful_count", models.IntegerField(verbose_name="同步成功数量", default=0)),
                ("failed_count", models.IntegerField(verbose_name="同步失败数量", default=0)),
            ],
        ),
        migrations.AlterField(
            model_name="profilecategory",
            name="type",
            field=models.CharField(
                choices=[
                    ("local", "本地目录"),
                    ("mad", "Microsoft Active Directory"),
                    ("ldap", "OpenLDAP"),
                    ("custom", "自定义目录"),
                    ("pluggable", "可插拔目录"),
                ],
                max_length=32,
                verbose_name="类型",
            ),
        ),
        migrations.CreateModel(
            name="SyncProgressLog",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                ("logs", models.TextField(verbose_name="日志")),
                ("failed_records", models.JSONField(default=list)),
                (
                    "progress",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name="log", to="categories.syncprogress"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="syncprogress",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="categories.profilecategory", verbose_name="用户目录"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="syncprogress",
            unique_together={("category", "step", "task_id")},
        ),
    ]
